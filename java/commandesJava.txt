			COMANDES JAVA

int tableauEntier[] = {0,1,2,3,4,5,6,7,8,9};
int premiersNombres[][] = { {0,2,4,6,8},{1,3,5,7,9} }, i = 0, j = 0;
new ArrayList<Media>();
new LinkedList();			//liste chainé où chaque element est lié au précedent et au suivant par une reference
 
while (i < 2)
{
  j = 0;
  while(j < 5)
  {
    System.out.print(premiersNombres[i][j]);
    j++;
  }
  System.out.println("");
  i++;
}

System.out.println("C'est bientôt la pause");
for (var x: args) {
            System.out.println(x);
        }
        
for(int i=0; i<args.length; i++){
    System.out.println("Parametre n° " + Integer.toString(i) + ": " + args[i]);
}

java.util.Scanner sc = new java.util.Scanner(System.in);		//Saisie
import java.util.*;
public static String Lit() {
        Scanner sc = new Scanner(System.in);
        return sc.nextLine();
    }

b = (i1 == i);				//egalité

char c = 'a';				//type char et pas String
 s1 = (short)i;				//conversion en short

float pi = (float)3.14;			//converson
float pi2 = 3.14f;			//constante
123L					//constante longue

final float pi2 = 3.14f;		//initialisation ne peut etre faite qu'une fois

Integer.parseInt(txt.trim())
Float.parseFloat

.valueOf()
toString()
.equals()				//regarde le contenu et pas la référence mémoire
.contains(p)				//arrayList contient, se comporte par rapport au equals

@Override				//permet toString sur l'objet appelé dans une autre classe
    public String toString() {
        StringBuilder sb = new StringBuilder(nom);
        sb.append(", age : ");
        sb.append(getAge());
        return sb.toString();
    }

int somme (int... v){			//permet d'avoir plusieurs param mais on sait pas cb
static private int nombre; 		//cree une varialbe de classe


STATIC
static private int nombre; cree une varialbe de classe
public static  int getNombre() 
on appel la methode sur la classe
System.out.println(Personne.getNombre());


close				//destructeur de variable


Civilite politesse;					//class Personne
enum Civilite {
        MADAME, MONSIEUR
    }
p = new Personne(Civilite.MADAME, "Jeanne",800);	//class externe



try {
 	int i = sc.nextInt();
     }
catch (Exception e) {
         System.out.println(e);
      }
finnaly {					//permet de se premunir des return

}


public void setAge(int age) throws Exception {		//exception d'une methode
        if(age<0) {
            //System.out.println("Un age négatif n'existe pas");
           // return;
            throw new Exception("age négatif");  
        }

super(nom, age);				//choix du constructeur parent dans la classe fille
super.m1()					//appel de la methode parente dans la meme methode fille


int i = sc.nextInt();				//vider le buffer apres un nextInt();
sc.nextLine()	//permet de vider le buffer
txt=sc.nextLine();

String j = new String();
j = j.valueOf(i);

 for (Personne p : annuaire) { 			//interet seul qlq fille de Personnes ont l'interface Facebook donc on caste
            if (p instanceof Facebook) {
                System.out.println(p);
                Facebook f = (Facebook)p;
                f.getProfil();
            }
        }



					JEE
//Outil de debug
ServletContext sc;
sc = config.getServletContext();
sc.log("message truc")  //affiche le log dans service view server log

resp.sendRedirect(sc.getContextPath() + "/index.html");		//redirection


					Session
HttpSession session = request.getSession(true);

					Include/Forward
sc.getRequestDispatcher("/pied.html").include(req,resp);


					JSP
 Commentaires <%-- %>
 Declaration tag <%! %>
 Expression tag <%= %>			//ecriture, areviation outprintln()
 Directive tag <%@ %>
 Scriptlet tag <% %>
<sql:setDataSource
<sql:query

				Avoir le Path
<%= getServletConfig().getServletContext().getContextPath() %>

				Pied 
<%@ include file="pied.html" %>

				Objet implicite dans jsp
request 		javax.servlet.http.HttpServletRequest
response 		javax.servlet.http.HttpServletResponse
out 			javax.servlet.jsp.JspWriter
session 		javax.servlet.http.HttpSession
pageContext 		javax.servlet.jsp.PageContext
application 		javax.servlet.http.ServletContext
config 			javax.servlet.http.ServletConfig
page


				JspBean
 <jsp:useBean id="MaRecherche" scope="session" class="Recherche" /> 
<jsp:setProperty name="MaRecherche" property="auteur" param="auteur"		//set param auteur par recup de form
<jsp:setProperty name="MaRecherche" property="auteur" value="truc"

<jsp:getProperty name="MaRecherche" property="titre"  />
${titre}							//getter jstl


				JSTL (ajout de tag supplementaire)

    <groupId>jstl</groupId>				//Add to pom.xml
            <artifactId>jstl</artifactId>
            <version>1.2</version>
        </dependency>


<%@taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>		//add to jsp

				SESSION
request.getSession().invalidate();


				STRINGBUILDER
StringBuilder builder = new StringBuilder( "<table>\n" );
        for( int row=0; row<10; row++ ) {
            builder.append( "\t<tr>\n\t\t" );
            for( int column=0; column<10; column++ ) {
                builder.append( "<td>" );
                builder.append( row * column );
                builder.append( "</td>" );
            }
            builder.append( "\n\t</tr>\n" );
        }
        builder.append( "</table>\n" );
        return builder.toString();









